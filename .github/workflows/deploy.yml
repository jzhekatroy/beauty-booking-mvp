name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate Prisma Client
      run: npx prisma generate
        
    - name: Run Database Migrations
      run: npx prisma migrate deploy
        
    - name: Verify Database Schema
      run: npx prisma db push --accept-data-loss
        
    - name: Seed Database (if needed)
      run: npx prisma db seed
      continue-on-error: true
        
    - name: Build Application
      run: npm run build
        
    - name: Deploy to Production Server
      run: |
        echo "üöÄ Deploying to production server..."
        
        # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –¥–ª—è –¥–µ–ø–ª–æ—è
        tar -czf deploy.tar.gz .next package.json package-lock.json prisma .env.example
        
        # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        echo "üì¶ Uploading files to server..."
        scp -o StrictHostKeyChecking=no deploy.tar.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_PATH }}/
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –∏ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
        echo "üîÑ Deploying on server..."
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          cd ${{ secrets.SERVER_PATH }}
          
          # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
          echo "‚èπÔ∏è Stopping application..."
          pm2 stop beauty-booking || echo "App not running"
          
          # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
          echo "üíæ Creating backup..."
          if [ -d "backup" ]; then
            rm -rf backup.old
            mv backup backup.old
          fi
          if [ -d "current" ]; then
            mv current backup
          fi
          
          # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–¥
          echo "üì¶ Extracting new code..."
          mkdir -p current
          cd current
          tar -xzf ../deploy.tar.gz
          
          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
          echo "üì• Installing dependencies..."
          npm ci --production
          
          # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma Client
          echo "üîß Generating Prisma Client..."
          npx prisma generate
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
          echo "üîÑ Running database migrations..."
          npx prisma migrate deploy
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
          echo "üöÄ Starting application..."
          pm2 start npm --name "beauty-booking" -- start
          
          # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
          rm -f ../deploy.tar.gz
          
          echo "‚úÖ Deployment completed!"
        EOF
        
    - name: Health Check
      run: |
        echo "üîç Running health check..."
        echo "‚úÖ Deployment completed successfully!"
        echo "üåê Check your production URL to verify"