const { PrismaClient } = require('@prisma/client');
const fs = require('fs');

const prisma = new PrismaClient();

async function checkDatabase() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...\n');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –±–∞–∑—ã
    const stats = fs.statSync('prisma/dev.db');
    console.log(`üìÅ –†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ${(stats.size / 1024).toFixed(2)} KB`);
    console.log(`üìÖ –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è: ${stats.mtime}\n`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã/—Å–∞–ª–æ–Ω—ã
    const teams = await prisma.team.findMany({
      include: {
        _count: {
          select: { users: true, masters: true, services: true, bookings: true }
        }
      }
    });
    console.log(`üè¢ –ö–æ–º–∞–Ω–¥—ã/—Å–∞–ª–æ–Ω—ã (${teams.length}):`);
    teams.forEach(team => {
      console.log(`  - ${team.name} (slug: ${team.slug})`);
      console.log(`    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${team._count.users}, –ú–∞—Å—Ç–µ—Ä–∞: ${team._count.masters}, –£—Å–ª—É–≥–∏: ${team._count.services}, –ë—Ä–æ–Ω–∏: ${team._count.bookings}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await prisma.user.findMany({
      select: { id: true, email: true, role: true, teamId: true }
    });
    console.log(`\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (${users.length}):`);
    users.forEach(user => {
      console.log(`  - ${user.email} (${user.role}) - teamId: ${user.teamId}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤
    const masters = await prisma.master.findMany({
      include: {
        user: { select: { email: true } },
        _count: { select: { services: true, bookings: true } }
      }
    });
    console.log(`\nüë®‚Äçüíº –ú–∞—Å—Ç–µ—Ä–∞ (${masters.length}):`);
    masters.forEach(master => {
      console.log(`  - ${master.firstName} ${master.lastName} (${master.user.email}) - teamId: ${master.teamId}`);
      console.log(`    –£—Å–ª—É–≥–∏: ${master._count.services}, –ë—Ä–æ–Ω–∏: ${master._count.bookings}, –ê–∫—Ç–∏–≤–µ–Ω: ${master.isActive}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª—É–≥–∏
    const services = await prisma.service.findMany({
      include: {
        _count: { select: { masters: true, bookings: true } }
      }
    });
    console.log(`\nüíá‚Äç‚ôÄÔ∏è –£—Å–ª—É–≥–∏ (${services.length}):`);
    services.forEach(service => {
      console.log(`  - ${service.name} (${service.price}‚ÇΩ, ${service.duration}–º–∏–Ω) - teamId: ${service.teamId}`);
      console.log(`    –ú–∞—Å—Ç–µ—Ä–∞: ${service._count.masters}, –ë—Ä–æ–Ω–∏: ${service._count.bookings}, –ê—Ä—Ö–∏–≤–Ω–∞: ${service.isArchived}`);
    });
    
    console.log('\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

checkDatabase();
