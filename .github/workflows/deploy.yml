name: 🚀 Deploy to Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔨 Build application
      run: npm run build
      
    - name: 🧪 Run tests (if any)
      run: npm test --if-present
      
    - name: 📥 Update code on server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          echo "🚀 Обновляем код на сервере..."
          
          # Переходим в директорию проекта
          cd /home/beautyapp/beauty-booking
          echo "📂 Текущая директория: $(pwd)"
          
          echo "📥 Получаем последние изменения из GitHub..."
          git fetch origin
          git reset --hard origin/main
          echo "✅ Код обновлен до коммита: $(git rev-parse --short HEAD)"
          
          echo "📦 Устанавливаем зависимости..."
          npm ci --production=false
          echo "✅ Зависимости установлены"
          
          echo "🔧 Исправляем права доступа сначала..."
          sudo chown -R beautyapp:beautyapp /home/beautyapp/beauty-booking
          sudo rm -rf /home/beautyapp/beauty-booking/.next
          echo "✅ Права доступа исправлены"
          
          echo "🔧 Настраиваем окружение от имени beautyapp..."
          chmod +x setup-env.sh
          sudo -u beautyapp ./setup-env.sh
          echo "✅ Окружение настроено"
          
          echo "🔨 Собираем проект от имени beautyapp..."
          sudo -u beautyapp npm run build
          echo "✅ Проект собран и готов к запуску"
          
    - name: 🔄 Restart application service
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        timeout: 300s
        script: |
          echo "🔄 Исправляем и перезапускаем приложение..."
          
          cd /home/beautyapp/beauty-booking
          
          # Используем принудительный скрипт исправления
          chmod +x scripts/force-fix.sh
          timeout 120 ./scripts/force-fix.sh
          
          echo "✅ Приложение перезапущено"
          
    - name: ✅ Verify deployment
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        timeout: 60s
        script: |
          echo "🔍 Быстрая проверка статуса деплоя..."
          
          cd /home/beautyapp/beauty-booking
          
          # Проверяем, что процесс запустился
          npm_pid=$(pgrep -f "npm start" || echo "")
          if [ ! -z "$npm_pid" ]; then
            echo "✅ Процесс npm start запущен (PID: $npm_pid)"
            
            # Проверяем владельца процесса
            process_owner=$(ps -o user= -p $npm_pid 2>/dev/null || echo "unknown")
            echo "👤 Процесс запущен от имени: $process_owner"
          else
            echo "❌ Процесс npm start не найден"
            echo "📋 Статус процессов:"
            ps aux | grep -E "(npm|node)" | grep -v grep || echo "Нет процессов npm/node"
            exit 1
          fi
          
          # Быстрая проверка health check
          echo "🔍 Проверяем health check..."
          if curl -f http://localhost:3000/api/health > /dev/null 2>&1; then
            echo "✅ Health check прошел успешно!"
            echo "🌐 Приложение доступно на http://test.2minutes.ru"
            echo "🎉 Деплой завершен успешно!"
          else
            echo "⚠️ Health check не прошел, но процесс запущен"
            echo "📋 Последние строки лога:"
            tail -10 app.log 2>/dev/null || echo "Лог недоступен"
            echo "🔍 Возможно приложение еще загружается..."
          fi
          
    - name: 📊 Deployment status
      if: success()
      run: |
        echo "🎉 Deployment successful!"
        echo "🔗 Check: http://test.2minutes.ru"
        echo "👤 Login: salon@example.com / password123"
        
    - name: ❌ Deployment failed
      if: failure()
      run: |
        echo "❌ Deployment failed!"
        echo "Check the logs above for details"