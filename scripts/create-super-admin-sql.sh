#!/bin/bash

# SQL —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/create-super-admin-sql.sh email@example.com password123

EMAIL=$1
PASSWORD=$2

if [ -z "$EMAIL" ]; then
    echo "‚ùå –£–∫–∞–∂–∏—Ç–µ email: ./scripts/create-super-admin-sql.sh email@example.com password123"
    exit 1
fi

if [ -z "$PASSWORD" ]; then
    echo "‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ./scripts/create-super-admin-sql.sh email@example.com password123"
    exit 1
fi

echo "üîß –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞ —á–µ—Ä–µ–∑ SQL: $EMAIL"

# –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å (bcrypt)
HASHED_PASSWORD=$(docker compose exec beauty-booking node -e "const bcrypt = require('bcryptjs'); console.log(bcrypt.hashSync('$PASSWORD', 10))")

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ SQL
docker compose exec postgres psql -U postgres -d beauty -c "
INSERT INTO users (id, email, password, role, first_name, last_name, created_at, updated_at) 
VALUES (
  'admin-$(date +%s)', 
  '$EMAIL', 
  '$HASHED_PASSWORD',
  'SUPER_ADMIN',
  'Super',
  'Admin',
  NOW(),
  NOW()
) ON CONFLICT (email) DO UPDATE SET 
  role = 'SUPER_ADMIN',
  password = '$HASHED_PASSWORD',
  updated_at = NOW();
"

if [ $? -eq 0 ]; then
    echo "‚úÖ –°—É–ø–µ—Ä–∞–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
    echo "üîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:"
    echo "   Email: $EMAIL"
    echo "   –ü–∞—Ä–æ–ª—å: $PASSWORD"
    echo "   URL: http://localhost:3000/login"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞"
    exit 1
fi
