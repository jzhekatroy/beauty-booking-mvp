import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function ensureGlobalNotificationSettings(): Promise<void> {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ç–∞–±–ª–∏—Ü—ã (–≤–∞–∂–Ω–æ –¥–ª—è —Ä–∞–Ω–Ω–µ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –º–∏–≥—Ä–∞—Ü–∏–π)
    await prisma.$queryRawUnsafe(
      "SELECT 1 FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'global_notification_settings'"
    )
  } catch (error) {
    console.error('‚ùå –¢–∞–±–ª–∏—Ü–∞ global_notification_settings –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏.', error)
    throw error
  }

    // –ò–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
  const existing = await prisma.globalNotificationSettings.findFirst()
  if (!existing) {
    await prisma.globalNotificationSettings.create({
      data: {
        // –í—Å–µ –¥–µ—Ñ–æ–ª—Ç—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –≤ Prisma-—Å—Ö–µ–º–µ
      },
    })
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å GlobalNotificationSettings —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é')
  } else {
    console.log('‚ÑπÔ∏è –ó–∞–ø–∏—Å—å GlobalNotificationSettings —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ')
  }
}

async function main() {
  console.log('üîß Post-migrate bootstrap: —Å—Ç–∞—Ä—Ç')
  await ensureGlobalNotificationSettings()
  // Ensure email verification schema (self-healing for prod)
  try {
    await prisma.$executeRawUnsafe('ALTER TABLE public.users ADD COLUMN IF NOT EXISTS "emailVerifiedAt" timestamptz NULL;')
    await prisma.$executeRawUnsafe(`
      CREATE TABLE IF NOT EXISTS public.email_verification_codes (
        id text PRIMARY KEY,
        user_id text NOT NULL REFERENCES public.users(id) ON DELETE CASCADE,
        code_hash text NOT NULL,
        expires_at timestamptz NOT NULL,
        sent_at timestamptz NOT NULL DEFAULT now(),
        consumed_at timestamptz NULL,
        attempts int NOT NULL DEFAULT 0
      );
    `)
    await prisma.$executeRawUnsafe('CREATE INDEX IF NOT EXISTS evc_user_id_expires_idx ON public.email_verification_codes (user_id, expires_at);')
    console.log('‚úÖ Email verification schema ensured')
  } catch (e) {
    console.error('‚ùå Failed to ensure email verification schema', e)
  }
  console.log('üéâ Post-migrate bootstrap: –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ')
}

main()
  .then(async () => {
    await prisma.$disconnect()
    process.exit(0)
  })
  .catch(async (error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ post-migrate bootstrap:', error)
    await prisma.$disconnect()
    process.exit(1)
  })


