#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ø—Ä–æ–¥–µ
 * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â—É—é –∫–æ–ª–æ–Ω–∫—É max_requests_per_minute –≤ —Ç–∞–±–ª–∏—Ü—É global_notification_settings
 */

const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient({
  datasources: {
    db: {
      url: process.env.DATABASE_URL
    }
  }
});

async function fixProductionDatabase() {
  try {
    console.log('üîß –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ø—Ä–æ–¥–µ...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ global_notification_settings
    const tableExists = await prisma.$queryRaw`
      SELECT EXISTS (
        SELECT FROM information_schema.tables 
        WHERE table_schema = 'public' 
        AND table_name = 'global_notification_settings'
      );
    `;
    
    console.log('üìä –¢–∞–±–ª–∏—Ü–∞ global_notification_settings —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', tableExists[0].exists);
    
    if (tableExists[0].exists) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ max_requests_per_minute
      const columnExists = await prisma.$queryRaw`
        SELECT EXISTS (
          SELECT FROM information_schema.columns 
          WHERE table_schema = 'public' 
          AND table_name = 'global_notification_settings'
          AND column_name = 'max_requests_per_minute'
        );
      `;
      
      console.log('üìä –ö–æ–ª–æ–Ω–∫–∞ max_requests_per_minute —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', columnExists[0].exists);
      
      if (!columnExists[0].exists) {
        console.log('‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É max_requests_per_minute...');
        
        await prisma.$executeRaw`
          ALTER TABLE global_notification_settings 
          ADD COLUMN max_requests_per_minute INTEGER DEFAULT 60;
        `;
        
        console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ max_requests_per_minute –¥–æ–±–∞–≤–ª–µ–Ω–∞');
      } else {
        console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ max_requests_per_minute —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ updated_at
      const updatedAtExists = await prisma.$queryRaw`
        SELECT EXISTS (
          SELECT FROM information_schema.columns 
          WHERE table_schema = 'public' 
          AND table_name = 'global_notification_settings'
          AND column_name = 'updated_at'
        );
      `;
      
      console.log('üìä –ö–æ–ª–æ–Ω–∫–∞ updated_at —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', updatedAtExists[0].exists);
      
      if (!updatedAtExists[0].exists) {
        console.log('‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É updated_at...');
        
        await prisma.$executeRaw`
          ALTER TABLE global_notification_settings 
          ADD COLUMN updated_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP;
        `;
        
        console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ updated_at –¥–æ–±–∞–≤–ª–µ–Ω–∞');
      } else {
        console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ updated_at —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      }
      
      // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
      const existingSettings = await prisma.globalNotificationSettings.findFirst();
      
      if (!existingSettings) {
        console.log('‚ûï –°–æ–∑–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');
        
        await prisma.globalNotificationSettings.create({
          data: {
            maxRequestsPerMinute: 60,
            enabled: true,
            createdAt: new Date(),
            updatedAt: new Date()
          }
        });
        
        console.log('‚úÖ –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–∑–¥–∞–Ω—ã');
      } else {
        console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç');
      }
      
    } else {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ global_notification_settings –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      console.log('üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é...');
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
      const { execSync } = require('child_process');
      execSync('npx prisma migrate deploy', { stdio: 'inherit' });
      
      console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã');
    }
    
    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ø—Ä–æ–¥–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
fixProductionDatabase();
