const https = require('https');
const http = require('http');
const { createProxyMiddleware } = require('http-proxy-middleware');
const fs = require('fs');
const path = require('path');

// –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
const { execSync } = require('child_process');

const certDir = path.join(__dirname, 'certs');
if (!fs.existsSync(certDir)) {
  fs.mkdirSync(certDir);
}

const keyPath = path.join(certDir, 'key.pem');
const certPath = path.join(certDir, 'cert.pem');

if (!fs.existsSync(keyPath) || !fs.existsSync(certPath)) {
  console.log('üîê –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç...');
  try {
    execSync(`openssl req -x509 -newkey rsa:4096 -keyout ${keyPath} -out ${certPath} -days 365 -nodes -subj "/C=US/ST=State/L=City/O=Organization/CN=localhost"`);
    console.log('‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞:', error.message);
    console.log('üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OpenSSL: brew install openssl');
    process.exit(1);
  }
}

const options = {
  key: fs.readFileSync(keyPath),
  cert: fs.readFileSync(certPath)
};

// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–∫—Å–∏ –¥–ª—è Next.js —Å–µ—Ä–≤–µ—Ä–∞
const proxy = createProxyMiddleware({
  target: 'http://localhost:3000',
  changeOrigin: true,
  logLevel: 'debug'
});

// –°–æ–∑–¥–∞–µ–º HTTPS —Å–µ—Ä–≤–µ—Ä
const server = https.createServer(options, (req, res) => {
  // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è CORS
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');
  
  if (req.method === 'OPTIONS') {
    res.writeHead(200);
    res.end();
    return;
  }
  
  proxy(req, res);
});

const PORT = 3443;
server.listen(PORT, () => {
  console.log(`üöÄ HTTPS –ø—Ä–æ–∫—Å–∏ –∑–∞–ø—É—â–µ–Ω –Ω–∞ https://localhost:${PORT}`);
  console.log(`üì± –ü—É–±–ª–∏—á–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–ø–∏—Å–∏: https://localhost:${PORT}/book/first`);
  console.log(`üîó –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: https://localhost:${PORT}/admin`);
  console.log('');
  console.log('‚ö†Ô∏è  –ë—Ä–∞—É–∑–µ—Ä –ø–æ–∫–∞–∂–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ');
  console.log('   –ù–∞–∂–º–∏—Ç–µ "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ" ‚Üí "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ localhost (–Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ)"');
  console.log('');
  console.log('üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C');
});
