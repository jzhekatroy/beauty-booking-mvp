#!/usr/bin/env node

const { PrismaClient } = require('@prisma/client')
const bcrypt = require('bcryptjs')
const jwt = require('jsonwebtoken')

const prisma = new PrismaClient()

async function fixSuperAdminAuth() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞...')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º JWT_SECRET
    const jwtSecret = process.env.JWT_SECRET
    if (!jwtSecret || jwtSecret === 'your-super-secret-jwt-key-here') {
      console.error('‚ùå JWT_SECRET –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!')
      process.exit(1)
    }
    
    console.log('‚úÖ JWT_SECRET –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ')
    
    // –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∫–æ–º–∞–Ω–¥—É
    let systemTeam = await prisma.team.findFirst({
      where: { teamNumber: 'B0000001' }
    })
    
    if (!systemTeam) {
      console.log('üìù –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∫–æ–º–∞–Ω–¥—É...')
      systemTeam = await prisma.team.create({
        data: {
          teamNumber: 'B0000001',
          name: '–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
          slug: 'system',
          contactPerson: '–°—É–ø–µ—Ä –ê–¥–º–∏–Ω',
          email: 'admin@beauty-booking.com',
          masterLimit: 0,
        }
      })
      console.log('‚úÖ –°–∏—Å—Ç–µ–º–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∞')
    } else {
      console.log('‚úÖ –°–∏—Å—Ç–µ–º–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–∞–π–¥–µ–Ω–∞')
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞
    let superAdmin = await prisma.user.findFirst({
      where: { 
        email: 'melkiy63@yandex.ru',
        role: 'SUPER_ADMIN'
      }
    })
    
    if (!superAdmin) {
      console.log('üìù –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞...')
      const hashedPassword = await bcrypt.hash('rootpasswd', 10)
      
      superAdmin = await prisma.user.create({
        data: {
          email: 'melkiy63@yandex.ru',
          password: hashedPassword,
          role: 'SUPER_ADMIN',
          firstName: 'Super',
          lastName: 'Admin',
          teamId: systemTeam.id,
        }
      })
      console.log('‚úÖ –°—É–ø–µ—Ä–∞–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω')
    } else {
      console.log('‚úÖ –°—É–ø–µ—Ä–∞–¥–º–∏–Ω –Ω–∞–π–¥–µ–Ω')
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
    const token = jwt.sign(
      {
        userId: superAdmin.id,
        email: superAdmin.email,
        role: superAdmin.role,
        teamId: superAdmin.teamId
      },
      jwtSecret,
      { expiresIn: '7d' }
    )
    
    console.log('üîë –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω')
    console.log('üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:')
    console.log('   Email: melkiy63@yandex.ru')
    console.log('   –ü–∞—Ä–æ–ª—å: rootpasswd')
    console.log('   –¢–æ–∫–µ–Ω:', token)
    console.log('')
    console.log('üåê URL –¥–ª—è –≤—Ö–æ–¥–∞: http://localhost:3000/login')
    console.log('')
    console.log('üí° –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –æ—á–∏—Å—Ç–∏—Ç–µ localStorage –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏ –≤–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

fixSuperAdminAuth()
