'use client'

import { useState } from 'react'

interface TelegramBotSettingsProps {
  currentToken: string | null
  onUpdate: (token: string | null) => Promise<void>
}

const TelegramBotSettings: React.FC<TelegramBotSettingsProps> = ({
  currentToken,
  onUpdate
}) => {
  const [token, setToken] = useState(currentToken || '')
  const [isEditing, setIsEditing] = useState(false)
  const [isLoading, setIsLoading] = useState(false)
  const [error, setError] = useState<string | null>(null)
  const [success, setSuccess] = useState<string | null>(null)

  const handleSave = async () => {
    setIsLoading(true)
    setError(null)
    setSuccess(null)

    try {
      // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞
      if (token.trim()) {
        const tokenPattern = /^\d+:[A-Za-z0-9_-]+$/
        if (!tokenPattern.test(token.trim())) {
          throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞. –¢–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 123456789:ABCdefGHIjklMNOpqrsTUVwxyz')
        }
      }

      await onUpdate(token.trim() || null)
      setSuccess('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã')
      setIsEditing(false)
    } catch (err: any) {
      setError(err.message)
    } finally {
      setIsLoading(false)
    }
  }

  const handleCancel = () => {
    setToken(currentToken || '')
    setIsEditing(false)
    setError(null)
    setSuccess(null)
  }

  const handleTestToken = async () => {
    const effectiveToken = (isEditing ? token : (currentToken || '')).trim()
    if (!effectiveToken) {
      setError('–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞')
      return
    }

    setIsLoading(true)
    setError(null)
    setSuccess(null)

    try {
      const response = await fetch(`https://api.telegram.org/bot${effectiveToken}/getMe`)
      const data = await response.json()

      if (data.ok) {
        setSuccess(`‚úÖ –¢–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç! –ë–æ—Ç: @${data.result.username} (${data.result.first_name})`)
      } else {
        throw new Error(`–û—à–∏–±–∫–∞ API Telegram: ${data.description}`)
      }
    } catch (err: any) {
      setError(`–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞: ${err.message}`)
    } finally {
      setIsLoading(false)
    }
  }

  const handleSetMiniApp = async () => {
    setIsLoading(true)
    setError(null)
    setSuccess(null)
    try {
      const auth = localStorage.getItem('token')
      if (!auth) throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏')
      const resp = await fetch('/api/team/telegram/set-menu-button', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${auth}` }
      })
      const data = await resp.json()
      if (!resp.ok) throw new Error(data?.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∑–Ω–∞—á–∏—Ç—å Mini App')
      setSuccess(`‚úÖ Mini App –Ω–∞–∑–Ω–∞—á–µ–Ω. –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç: ${data.url}`)
    } catch (err: any) {
      setError(err.message)
    } finally {
      setIsLoading(false)
    }
  }

  return (
    <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
      <div className="flex items-center justify-between mb-4">
        <h3 className="text-lg font-semibold text-gray-900">
          ü§ñ Telegram Bot
        </h3>
        <div className="flex items-center gap-2">
          {!isEditing && (
            <button
              onClick={() => setIsEditing(true)}
              className="px-3 py-1 text-sm bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors"
            >
              {currentToken ? '–ò–∑–º–µ–Ω–∏—Ç—å' : '–î–æ–±–∞–≤–∏—Ç—å'}
            </button>
          )}
          <button
            onClick={handleTestToken}
            disabled={isLoading}
            className="px-3 py-1 text-sm bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors disabled:opacity-50"
          >
            –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω
          </button>
          <button
            onClick={handleSetMiniApp}
            disabled={isLoading || !(currentToken || (isEditing && token.trim()))}
            className="px-3 py-1 text-sm bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors disabled:opacity-50"
          >
            –ù–∞–∑–Ω–∞—á–∏—Ç—å Mini App
          </button>
        </div>
      </div>

      {success && (
        <div className="mb-4 p-3 bg-green-50 border border-green-200 rounded-md">
          <p className="text-green-800 text-sm">{success}</p>
        </div>
      )}

      {error && (
        <div className="mb-4 p-3 bg-red-50 border border-red-200 rounded-md">
          <p className="text-red-800 text-sm">{error}</p>
        </div>
      )}

      {isEditing ? (
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –¢–æ–∫–µ–Ω –±–æ—Ç–∞
            </label>
            <input
              type="text"
              value={token}
              onChange={(e) => setToken(e.target.value)}
              placeholder="123456789:ABCdefGHIjklMNOpqrsTUVwxyz"
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              disabled={isLoading}
            />
            <p className="mt-1 text-xs text-gray-500">
              –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –≤ Telegram
            </p>
          </div>

          <div className="flex space-x-3">
            <button
              onClick={handleSave}
              disabled={isLoading}
              className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors disabled:opacity-50"
            >
              {isLoading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'}
            </button>
            <button
              onClick={handleCancel}
              disabled={isLoading}
              className="px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 transition-colors disabled:opacity-50"
            >
              –û—Ç–º–µ–Ω–∞
            </button>
          </div>

          <div className="bg-gray-50 border border-gray-200 rounded-md p-3">
            <p className="text-xs font-medium text-gray-800 mb-1">–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∏—Ç—å API KEY:</p>
            <ol className="text-xs text-gray-700 space-y-1 list-decimal ml-5">
              <li>–û—Ç–∫—Ä–æ–π—Ç–µ @BotFather –≤ Telegram</li>
              <li>–û—Ç–ø—Ä–∞–≤—å—Ç–µ /newbot –∏ –∑–∞–¥–∞–π—Ç–µ –∏–º—è –∏ username</li>
              <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤—ã–¥–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω (API KEY)</li>
              <li>–í—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤—ã—à–µ –∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–°–æ—Ö—Ä–∞–Ω–∏—Ç—å¬ª</li>
            </ol>
          </div>
        </div>
      ) : (
        <div className="space-y-4">
          {currentToken ? (
            <div>
              <div className="flex items-center space-x-2 mb-2">
                <span className="text-sm font-medium text-gray-700">–¢–æ–∫–µ–Ω:</span>
                <span className="text-sm text-gray-500">‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢</span>
              </div>
              <p className="text-xs text-gray-500">
                –¢–æ–∫–µ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω. WebApp –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —ç—Ç–∏–º –±–æ—Ç–æ–º.
              </p>
            </div>
          ) : (
            <div className="text-center py-4">
              <p className="text-gray-500 text-sm mb-2">
                Telegram –±–æ—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
              </p>
              <p className="text-xs text-gray-400">
                –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram WebApp
              </p>
            </div>
          )}

          {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—é —É–±—Ä–∞–ª–∏ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é */}

          {currentToken && (
            <div className="bg-green-50 border border-green-200 rounded-md p-4">
              <h4 className="text-sm font-medium text-green-900 mb-2">
                ‚úÖ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:
              </h4>
              <p className="text-xs text-green-800 mb-2">
                –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Mini App –≤ @BotFather:
              </p>
              <ol className="text-xs text-green-800 space-y-1">
                <li>1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /mybots –≤ @BotFather</li>
                <li>2. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞</li>
                <li>3. Bot Settings ‚Üí Mini App</li>
                <li>4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ URL: https://test.2minutes.ru/book/{currentToken ? 'your-slug' : 'first'}</li>
              </ol>
            </div>
          )}
        </div>
      )}
    </div>
  )
}

export default TelegramBotSettings