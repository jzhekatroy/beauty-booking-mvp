#!/bin/bash
set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

EMAIL=$1
NEW_PASSWORD=$2

if [ -z "$EMAIL" ] || [ -z "$NEW_PASSWORD" ]; then
    echo -e "${RED}‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <email> <–Ω–æ–≤—ã–π_–ø–∞—Ä–æ–ª—å>${NC}"
    exit 1
fi

echo -e "${BLUE}üîß –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $EMAIL${NC}"
echo -e "${YELLOW}–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: $NEW_PASSWORD${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose
echo -e "${BLUE}üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose...${NC}"
if ! docker compose ps > /dev/null 2>&1; then
    echo -e "${RED}‚ùå Docker Compose –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ –µ–≥–æ.${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${BLUE}üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
docker compose ps

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è
echo -e "${BLUE}üîê –ú–µ–Ω—è–µ–º –ø–∞—Ä–æ–ª—å...${NC}"

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ docker exec
docker compose exec beauty-booking node -e "
const { PrismaClient } = require('@prisma/client');
const bcrypt = require('bcryptjs');

const prisma = new PrismaClient();

async function changePassword() {
  try {
    const email = '$EMAIL';
    const newPassword = '$NEW_PASSWORD';
    
    console.log('üîß –ú–µ–Ω—è–µ–º –ø–∞—Ä–æ–ª—å –¥–ª—è:', email);
    
    // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await prisma.user.findUnique({
      where: { email },
      select: { id: true, email: true, role: true, firstName: true, lastName: true }
    });
    
    if (!user) {
      console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', email, '–Ω–µ –Ω–∞–π–¥–µ–Ω!');
      process.exit(1);
    }
    
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', user.firstName, user.lastName, '(' + user.role + ')');
    
    // –•–µ—à–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
    const hashedPassword = bcrypt.hashSync(newPassword, 10);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å
    await prisma.user.update({
      where: { email },
      data: { password: hashedPassword }
    });
    
    console.log('‚úÖ –ü–∞—Ä–æ–ª—å –¥–ª—è', email, '—É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!');
    console.log('üîë –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
    console.log('   Email:', email);
    console.log('   –ü–∞—Ä–æ–ª—å:', newPassword);
    console.log('   URL: https://test.2minutes.ru/login');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  } finally {
    await prisma.\$disconnect();
  }
}

changePassword();
"

echo -e "${GREEN}‚úÖ –ì–æ—Ç–æ–≤–æ!${NC}"
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ: https://test.2minutes.ru/login${NC}"
